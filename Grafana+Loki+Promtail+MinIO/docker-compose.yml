version: "3"

networks:
  loki:

services:

  minio:
    image: minio/minio:latest
    volumes:
      - ./data/minio:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - loki
    command: server /data --address ':9000' --console-address ':9001'

  createbuckets:
    image: minio/mc
    networks:
      - loki
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc rm -r --force myminio/loki;
      /usr/bin/mc mb myminio/loki;
      /usr/bin/mc policy set public myminio/loki;
      exit 0;
      "

  loki:
    image: grafana/loki:2.8.0
    networks:
      - loki
    volumes:
      - ./data/loki:/var/loki:RW
      - ./config/loki:/etc/loki
    ports:
      - "3100:3100"
      - "9096:9096"
    command: -config.file=/etc/loki/loki-config.yml
    
  promtail:
    image: grafana/promtail:2.8.0
    volumes:
      - ./data/promtail:/mnt/promtail:RW
      - ./config/promtail:/etc/promtail
      - ./log:/var/custom-log
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki